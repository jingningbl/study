<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <context:component-scan base-package="com.springMvc"/>
    <!--    <bean id="handlerAdapter" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">-->
    <!--        <property name="messageConverters">-->
    <!--            <list>-->
    <!--                <bean class="org.springframework.http.converter.StringHttpMessageConverter">-->
    <!--                    <property name="supportedMediaTypes">-->
    <!--                        <list>-->
    <!--                            <value>text/html;charset=utf-8</value>-->
    <!--                        </list>-->
    <!--                    </property>-->
    <!--                </bean>-->
    <!--            </list>-->
    <!--        </property>-->
    <!--    </bean>-->
    <!--    自定义转换器配置-->
    <!--    <bean id="myConverter" class="com.springMvc.converter.MyConverter"/>-->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.springMvc.converter.MyConverter"/>
                <!--                <ref bean="myConverter"/>-->
            </set>
        </property>
    </bean>
    <!--    开启SpringMVC注解开发模式,两个重要的组件:HandlerMapping,HandlerAdapter-->
    <mvc:annotation-driven conversion-service="conversionService">
        <mvc:message-converters>
            <!--            因为接口中使用了@ResponseBody注解,作用于该注解的转换器叫StringHttpMessageConverter-->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <!--                        <value>application/json;charset=UTF-8</value>-->
                    </list>
                </property>
            </bean>
            <!--            该转换器用来处理时间,全局配置,不常用-->
            <!--            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
            <!--                <property name="objectMapper">-->
            <!--                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">-->
            <!--                        <property name="dateFormat">-->
            <!--                            <bean class="java.text.SimpleDateFormat">-->
            <!--                                <constructor-arg name="pattern" value="yyyy/MM/dd HH:mm:ss"/>-->
            <!--                            </bean>-->
            <!--                        </property>-->
            <!--                    </bean>-->
            <!--                </property>-->
            <!--            </bean>-->
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!--    让DispatcherServlet对静态资源放行-->
    <mvc:default-servlet-handler/>
    <!--默认的视图解析器-->
    <!--    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
    <!--&lt;!&ndash;    设置试图名字的前缀,一般设置为放置模板引擎文件的公共目录   &ndash;&gt;-->
    <!--        <property name="prefix" value="/front"/>-->
    <!--&lt;!&ndash;     设置视图名字的后缀,一般设置为放置模板引擎文件的后缀名   &ndash;&gt;-->
    <!--        <property name="suffix" value=".jsp"/>-->
    <!--        <property name="contentType" value="text/html;charset=UTF-8"/>-->
    <!--    </bean>-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <!--        <property name="prefix" value=""/>-->
        <property name="suffix" value=".ftl"/>
        <property name="contentType" value="text/html;charset=utf-8"/>
    </bean>
    <!--    相当于配置前缀-->
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/ftl/"/>
        <property name="freemarkerSettings">
            <props>
                <!--                模板引擎文件本身的编码-->
                <prop key="defaultEncoding">UTF-8</prop>
            </props>
        </property>
    </bean>
    <!--
        跨域问题,全局配置
        path:允许跨域资源访问的路径
        allowed-origins:允许跨域资源访问的域名,*为所有
        allowed-methods:允许跨域资源访问的请求方式,*为所有
        max-age:预检请求结果被客户端保存的最长时间,默认1800s,30min
    -->
    <!--    <mvc:cors>-->
    <!--        <mvc:mapping path="/restful/*"-->
    <!--                     allowed-origins="http://localhost:8080"-->
    <!--                     allowed-methods="GET,POST"-->
    <!--                     max-age="3600"/>-->
    <!--    </mvc:cors>-->
    <!--    多个拦截器-->
    <mvc:interceptors>
        <!--        <bean id="myInterceptor" class="com.springMvc.interceptor.MyInterceptor"/>-->
        <!--        单个拦截器-->
        <!--        <mvc:interceptor>-->
        <!--            &lt;!&ndash;            需要拦截的请求的路径,可用通配符&ndash;&gt;-->
        <!--            <mvc:mapping path="/**"/>-->
        <!--            &lt;!&ndash;            排除拦截的请求&ndash;&gt;-->
        <!--            <mvc:exclude-mapping path="/**.js"/>-->
        <!--            <mvc:exclude-mapping path="/**.ico"/>-->
        <!--            &lt;!&ndash;            <bean class="com.springMvc.interceptor.MyInterceptor"/>&ndash;&gt;-->
        <!--            <ref bean="myInterceptor"/>-->
        <!--        </mvc:interceptor>-->

        <mvc:interceptor>
            <mvc:mapping path="/rest.html"/>
            <ref bean="firstInterceptor"/>
        </mvc:interceptor>

        <mvc:interceptor>
            <mvc:mapping path="/rest.html"/>
            <ref bean="secondInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
    <!--    <bean id="myInterceptor" class="com.springMvc.interceptor.MyInterceptor"/>-->
    <!--文件上传处理器-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--        限制一次上传的文件大小,单位字节-->
        <property name="maxUploadSize" value="6000000"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>
</beans>